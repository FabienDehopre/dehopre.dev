diff --git a/esm2022/host-binding/host-binding.mjs b/esm2022/host-binding/host-binding.mjs
index 2cc5bb1a814baa7883c10cba6fa328b8be83c107..b4986a7fd003f437de9813b1a0a9be26fa1b31ea 100644
--- a/esm2022/host-binding/host-binding.mjs
+++ b/esm2022/host-binding/host-binding.mjs
@@ -31,9 +31,18 @@ export function hostBinding(hostPropertyName, signal, injector) {
             const [binding, property, unit] = hostPropertyName.split('.');
             switch (binding) {
                 case 'style':
-                    renderer.setStyle(element, property, `${value}${unit ?? ''}`, property.startsWith('--')
-                        ? RendererStyleFlags2.DashCase
-                        : undefined);
+                    if (property) {
+                        renderer.setStyle(element, property, `${value}${unit ?? ''}`, property.startsWith('--')
+                            ? RendererStyleFlags2.DashCase
+                            : undefined);
+                    }
+                    else if (typeof value === 'object' && value !== null) {
+                        for (const [style, val] of Object.entries(value)) {
+                            renderer.setStyle(element, style, val, style.startsWith('--')
+                                ? RendererStyleFlags2.DashCase
+                                : undefined);
+                        }
+                    }
                     break;
                 case 'attr':
                     if (value == null) {
@@ -68,4 +77,4 @@ export function hostBinding(hostPropertyName, signal, injector) {
     });
     return signal;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC1iaW5kaW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3h0ZW5zaW9uL2hvc3QtYmluZGluZy9zcmMvaG9zdC1iaW5kaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlEQUFpRDtBQUNqRCxPQUFPLEVBQ04sTUFBTSxFQUNOLFVBQVUsRUFFVixNQUFNLEVBRU4sU0FBUyxFQUNULG1CQUFtQixFQUNuQixxQkFBcUIsR0FHckIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxNQUFNLFVBQVUsV0FBVyxDQUMxQixnQkFBMkQsRUFDM0QsTUFBUyxFQUNULFFBQW1CO0lBRW5CLFFBQVEsR0FBRyxjQUFjLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRWpELHFCQUFxQixDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUU7UUFDcEMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sT0FBTyxHQUFnQixNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsYUFBYSxDQUFDO1FBRTlELElBQUksV0FBVyxHQUFhLEVBQUUsQ0FBQztRQUUvQixNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ1gsTUFBTSxLQUFLLEdBQUcsTUFBTSxFQUFFLENBQUM7WUFDdkIsTUFBTSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTlELFFBQVEsT0FBTyxFQUFFLENBQUM7Z0JBQ2pCLEtBQUssT0FBTztvQkFDWCxRQUFRLENBQUMsUUFBUSxDQUNoQixPQUFPLEVBQ1AsUUFBUSxFQUNSLEdBQUcsS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLEVBQUUsRUFDdkIsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7d0JBQ3hCLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRO3dCQUM5QixDQUFDLENBQUMsU0FBUyxDQUNaLENBQUM7b0JBQ0YsTUFBTTtnQkFDUCxLQUFLLE1BQU07b0JBQ1YsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFLENBQUM7d0JBQ25CLFFBQVEsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO29CQUM3QyxDQUFDO3lCQUFNLENBQUM7d0JBQ1AsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUN6RCxDQUFDO29CQUNELE1BQU07Z0JBQ1AsS0FBSyxPQUFPO29CQUNYLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQzt3QkFDZixJQUFJLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQzs0QkFDeEIsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDOUQsQ0FBQzt3QkFDRCxXQUFXOzRCQUNWLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQzt3QkFDbkUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDM0QsQ0FBQzt5QkFBTSxDQUFDO3dCQUNQLElBQUksS0FBSyxFQUFFLENBQUM7NEJBQ1gsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7d0JBQ3RDLENBQUM7NkJBQU0sQ0FBQzs0QkFDUCxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQzt3QkFDekMsQ0FBQztvQkFDRixDQUFDO29CQUNELE1BQU07Z0JBQ1A7b0JBQ0MsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ2hELENBQUM7UUFDRixDQUFDLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlcyAqL1xuaW1wb3J0IHtcblx0ZWZmZWN0LFxuXHRFbGVtZW50UmVmLFxuXHRIb3N0QmluZGluZyxcblx0aW5qZWN0LFxuXHRJbmplY3Rvcixcblx0UmVuZGVyZXIyLFxuXHRSZW5kZXJlclN0eWxlRmxhZ3MyLFxuXHRydW5JbkluamVjdGlvbkNvbnRleHQsXG5cdHR5cGUgU2lnbmFsLFxuXHR0eXBlIFdyaXRhYmxlU2lnbmFsLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFzc2VydEluamVjdG9yIH0gZnJvbSAnbmd4dGVuc2lvbi9hc3NlcnQtaW5qZWN0b3InO1xuXG4vKipcbiAqIGBob3N0QmluZGluZ2AgdGFrZXMgYSBgaG9zdFByb3BlcnR5TmFtZWAgdG8gYXR0YWNoIGEgZGF0YSBwcm9wZXJ0eSwgYSBjbGFzcywgYSBzdHlsZSBvciBhbiBhdHRyaWJ1dGUgKGFzIGBASG9zdEJpbmRpbmdgIHdvdWxkKSB0byB0aGUgaG9zdC5cbiAqIFRoZSB1ZHBhdGUgaXMgYXBwbGllZCBiYXNlZCBvbiB0aGUgdXBkYXRlIG9mIHRoZSBwcm92aWRlZCBzaWduYWwgKHdyaXRhYmxlIG9yIG5vdCkuXG4gKlxuICogQHBhcmFtIHtSZXF1aXJlZDxIb3N0QmluZGluZz5bJ2hvc3RQcm9wZXJ0eU5hbWUnXX0gaG9zdFByb3BlcnR5TmFtZSAtIHRoZSBzYW1lIHByb3BlcnR5IHRoYXQgaXMgYm91bmQgdG8gYSBkYXRhIHByb3BlcnR5LCBhIGNsYXNzLCBhIHN0eWxlIG9yIGFuIGF0dHJpYnV0ZSBhcyBgQEhvc3RCaW5kaW5nYC5cbiAqIEBwYXJhbSB7U2lnbmFsIHwgV3JpdGFibGVTaWduYWx9IHNpZ25hbCAtIHRoZSBzaWduYWwgb24gd2hpY2ggdG8gcmVhY3QgdG8gY2hhbmdlcyB0byB1cGRhdGUgdGhlIGhvc3QsIGFuZCB0aGUgb25lIHRoYXQgd2lsbCBiZSByZXR1cm5lZCBhcyBpdCBpc1xuICogQHJldHVybnMge1NpZ25hbCB8IFdyaXRhYmxlU2lnbmFsfVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogZXhwb3J0IGNsYXNzIE15Q29tcG9uZW50IHtcbiAqICByZWFkb25seSBiYWNrZ3JvdW5kID0gaG9zdEJpbmRpbmcoJ3N0eWxlLmJhY2tncm91bmQnLCBzaWduYWwoJ2JsdWUnKSk7XG4gKlxuICogIGNvbnN0cnVjdG9yKCkge1xuICogICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmJhY2tncm91bmQuc2V0KCdyZWQnKSwgMzAwMCk7XG4gKiAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBob3N0QmluZGluZzxULCBTIGV4dGVuZHMgU2lnbmFsPFQ+IHwgV3JpdGFibGVTaWduYWw8VD4+KFxuXHRob3N0UHJvcGVydHlOYW1lOiBSZXF1aXJlZDxIb3N0QmluZGluZz5bJ2hvc3RQcm9wZXJ0eU5hbWUnXSxcblx0c2lnbmFsOiBTLFxuXHRpbmplY3Rvcj86IEluamVjdG9yLFxuKTogUyB7XG5cdGluamVjdG9yID0gYXNzZXJ0SW5qZWN0b3IoaG9zdEJpbmRpbmcsIGluamVjdG9yKTtcblxuXHRydW5JbkluamVjdGlvbkNvbnRleHQoaW5qZWN0b3IsICgpID0+IHtcblx0XHRjb25zdCByZW5kZXJlciA9IGluamVjdChSZW5kZXJlcjIpO1xuXHRcdGNvbnN0IGVsZW1lbnQ6IEhUTUxFbGVtZW50ID0gaW5qZWN0KEVsZW1lbnRSZWYpLm5hdGl2ZUVsZW1lbnQ7XG5cblx0XHRsZXQgcHJldkNsYXNzZXM6IHN0cmluZ1tdID0gW107XG5cblx0XHRlZmZlY3QoKCkgPT4ge1xuXHRcdFx0Y29uc3QgdmFsdWUgPSBzaWduYWwoKTtcblx0XHRcdGNvbnN0IFtiaW5kaW5nLCBwcm9wZXJ0eSwgdW5pdF0gPSBob3N0UHJvcGVydHlOYW1lLnNwbGl0KCcuJyk7XG5cblx0XHRcdHN3aXRjaCAoYmluZGluZykge1xuXHRcdFx0XHRjYXNlICdzdHlsZSc6XG5cdFx0XHRcdFx0cmVuZGVyZXIuc2V0U3R5bGUoXG5cdFx0XHRcdFx0XHRlbGVtZW50LFxuXHRcdFx0XHRcdFx0cHJvcGVydHksXG5cdFx0XHRcdFx0XHRgJHt2YWx1ZX0ke3VuaXQgPz8gJyd9YCxcblx0XHRcdFx0XHRcdHByb3BlcnR5LnN0YXJ0c1dpdGgoJy0tJylcblx0XHRcdFx0XHRcdFx0PyBSZW5kZXJlclN0eWxlRmxhZ3MyLkRhc2hDYXNlXG5cdFx0XHRcdFx0XHRcdDogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ2F0dHInOlxuXHRcdFx0XHRcdGlmICh2YWx1ZSA9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRyZW5kZXJlci5yZW1vdmVBdHRyaWJ1dGUoZWxlbWVudCwgcHJvcGVydHkpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZW5kZXJlci5zZXRBdHRyaWJ1dGUoZWxlbWVudCwgcHJvcGVydHksIFN0cmluZyh2YWx1ZSkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnY2xhc3MnOlxuXHRcdFx0XHRcdGlmICghcHJvcGVydHkpIHtcblx0XHRcdFx0XHRcdGlmIChwcmV2Q2xhc3Nlcy5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0cHJldkNsYXNzZXMuZm9yRWFjaCgoaykgPT4gcmVuZGVyZXIucmVtb3ZlQ2xhc3MoZWxlbWVudCwgaykpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cHJldkNsYXNzZXMgPVxuXHRcdFx0XHRcdFx0XHR0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnID8gdmFsdWUuc3BsaXQoJyAnKS5maWx0ZXIoQm9vbGVhbikgOiBbXTtcblx0XHRcdFx0XHRcdHByZXZDbGFzc2VzLmZvckVhY2goKGspID0+IHJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQsIGspKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRcdFx0XHRcdHJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQsIHByb3BlcnR5KTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJlbmRlcmVyLnJlbW92ZUNsYXNzKGVsZW1lbnQsIHByb3BlcnR5KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0cmVuZGVyZXIuc2V0UHJvcGVydHkoZWxlbWVudCwgYmluZGluZywgdmFsdWUpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcblxuXHRyZXR1cm4gc2lnbmFsO1xufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC1iaW5kaW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3h0ZW5zaW9uL2hvc3QtYmluZGluZy9zcmMvaG9zdC1iaW5kaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlEQUFpRDtBQUNqRCxPQUFPLEVBQ04sTUFBTSxFQUNOLFVBQVUsRUFFVixNQUFNLEVBRU4sU0FBUyxFQUNULG1CQUFtQixFQUNuQixxQkFBcUIsR0FHckIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxNQUFNLFVBQVUsV0FBVyxDQUMxQixnQkFBMkQsRUFDM0QsTUFBUyxFQUNULFFBQW1CO0lBRW5CLFFBQVEsR0FBRyxjQUFjLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRWpELHFCQUFxQixDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUU7UUFDcEMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sT0FBTyxHQUFnQixNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsYUFBYSxDQUFDO1FBRTlELElBQUksV0FBVyxHQUFhLEVBQUUsQ0FBQztRQUUvQixNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ1gsTUFBTSxLQUFLLEdBQUcsTUFBTSxFQUFFLENBQUM7WUFDdkIsTUFBTSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTlELFFBQVEsT0FBTyxFQUFFLENBQUM7Z0JBQ2pCLEtBQUssT0FBTztvQkFDWCxJQUFJLFFBQVEsRUFBRSxDQUFDO3dCQUNkLFFBQVEsQ0FBQyxRQUFRLENBQ2hCLE9BQU8sRUFDUCxRQUFRLEVBQ1IsR0FBRyxLQUFLLEdBQUcsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUN2QixRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQzs0QkFDeEIsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFFBQVE7NEJBQzlCLENBQUMsQ0FBQyxTQUFTLENBQ1osQ0FBQztvQkFDSCxDQUFDO3lCQUFNLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUUsQ0FBQzt3QkFDeEQsS0FBSyxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQzs0QkFDbEQsUUFBUSxDQUFDLFFBQVEsQ0FDaEIsT0FBTyxFQUNQLEtBQUssRUFDTCxHQUFHLEVBQ0gsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7Z0NBQ3JCLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRO2dDQUM5QixDQUFDLENBQUMsU0FBUyxDQUNaLENBQUM7d0JBQ0gsQ0FBQztvQkFDRixDQUFDO29CQUNELE1BQU07Z0JBQ1AsS0FBSyxNQUFNO29CQUNWLElBQUksS0FBSyxJQUFJLElBQUksRUFBRSxDQUFDO3dCQUNuQixRQUFRLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztvQkFDN0MsQ0FBQzt5QkFBTSxDQUFDO3dCQUNQLFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztvQkFDekQsQ0FBQztvQkFDRCxNQUFNO2dCQUNQLEtBQUssT0FBTztvQkFDWCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7d0JBQ2YsSUFBSSxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7NEJBQ3hCLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQzlELENBQUM7d0JBQ0QsV0FBVzs0QkFDVixPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7d0JBQ25FLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzNELENBQUM7eUJBQU0sQ0FBQzt3QkFDUCxJQUFJLEtBQUssRUFBRSxDQUFDOzRCQUNYLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO3dCQUN0QyxDQUFDOzZCQUFNLENBQUM7NEJBQ1AsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7d0JBQ3pDLENBQUM7b0JBQ0YsQ0FBQztvQkFDRCxNQUFNO2dCQUNQO29CQUNDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNoRCxDQUFDO1FBQ0YsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXMgKi9cbmltcG9ydCB7XG5cdGVmZmVjdCxcblx0RWxlbWVudFJlZixcblx0SG9zdEJpbmRpbmcsXG5cdGluamVjdCxcblx0SW5qZWN0b3IsXG5cdFJlbmRlcmVyMixcblx0UmVuZGVyZXJTdHlsZUZsYWdzMixcblx0cnVuSW5JbmplY3Rpb25Db250ZXh0LFxuXHR0eXBlIFNpZ25hbCxcblx0dHlwZSBXcml0YWJsZVNpZ25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhc3NlcnRJbmplY3RvciB9IGZyb20gJ25neHRlbnNpb24vYXNzZXJ0LWluamVjdG9yJztcblxuLyoqXG4gKiBgaG9zdEJpbmRpbmdgIHRha2VzIGEgYGhvc3RQcm9wZXJ0eU5hbWVgIHRvIGF0dGFjaCBhIGRhdGEgcHJvcGVydHksIGEgY2xhc3MsIGEgc3R5bGUgb3IgYW4gYXR0cmlidXRlIChhcyBgQEhvc3RCaW5kaW5nYCB3b3VsZCkgdG8gdGhlIGhvc3QuXG4gKiBUaGUgdWRwYXRlIGlzIGFwcGxpZWQgYmFzZWQgb24gdGhlIHVwZGF0ZSBvZiB0aGUgcHJvdmlkZWQgc2lnbmFsICh3cml0YWJsZSBvciBub3QpLlxuICpcbiAqIEBwYXJhbSB7UmVxdWlyZWQ8SG9zdEJpbmRpbmc+Wydob3N0UHJvcGVydHlOYW1lJ119IGhvc3RQcm9wZXJ0eU5hbWUgLSB0aGUgc2FtZSBwcm9wZXJ0eSB0aGF0IGlzIGJvdW5kIHRvIGEgZGF0YSBwcm9wZXJ0eSwgYSBjbGFzcywgYSBzdHlsZSBvciBhbiBhdHRyaWJ1dGUgYXMgYEBIb3N0QmluZGluZ2AuXG4gKiBAcGFyYW0ge1NpZ25hbCB8IFdyaXRhYmxlU2lnbmFsfSBzaWduYWwgLSB0aGUgc2lnbmFsIG9uIHdoaWNoIHRvIHJlYWN0IHRvIGNoYW5nZXMgdG8gdXBkYXRlIHRoZSBob3N0LCBhbmQgdGhlIG9uZSB0aGF0IHdpbGwgYmUgcmV0dXJuZWQgYXMgaXQgaXNcbiAqIEByZXR1cm5zIHtTaWduYWwgfCBXcml0YWJsZVNpZ25hbH1cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGV4cG9ydCBjbGFzcyBNeUNvbXBvbmVudCB7XG4gKiAgcmVhZG9ubHkgYmFja2dyb3VuZCA9IGhvc3RCaW5kaW5nKCdzdHlsZS5iYWNrZ3JvdW5kJywgc2lnbmFsKCdibHVlJykpO1xuICpcbiAqICBjb25zdHJ1Y3RvcigpIHtcbiAqICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5iYWNrZ3JvdW5kLnNldCgncmVkJyksIDMwMDApO1xuICogIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaG9zdEJpbmRpbmc8VCwgUyBleHRlbmRzIFNpZ25hbDxUPiB8IFdyaXRhYmxlU2lnbmFsPFQ+Pihcblx0aG9zdFByb3BlcnR5TmFtZTogUmVxdWlyZWQ8SG9zdEJpbmRpbmc+Wydob3N0UHJvcGVydHlOYW1lJ10sXG5cdHNpZ25hbDogUyxcblx0aW5qZWN0b3I/OiBJbmplY3Rvcixcbik6IFMge1xuXHRpbmplY3RvciA9IGFzc2VydEluamVjdG9yKGhvc3RCaW5kaW5nLCBpbmplY3Rvcik7XG5cblx0cnVuSW5JbmplY3Rpb25Db250ZXh0KGluamVjdG9yLCAoKSA9PiB7XG5cdFx0Y29uc3QgcmVuZGVyZXIgPSBpbmplY3QoUmVuZGVyZXIyKTtcblx0XHRjb25zdCBlbGVtZW50OiBIVE1MRWxlbWVudCA9IGluamVjdChFbGVtZW50UmVmKS5uYXRpdmVFbGVtZW50O1xuXG5cdFx0bGV0IHByZXZDbGFzc2VzOiBzdHJpbmdbXSA9IFtdO1xuXG5cdFx0ZWZmZWN0KCgpID0+IHtcblx0XHRcdGNvbnN0IHZhbHVlID0gc2lnbmFsKCk7XG5cdFx0XHRjb25zdCBbYmluZGluZywgcHJvcGVydHksIHVuaXRdID0gaG9zdFByb3BlcnR5TmFtZS5zcGxpdCgnLicpO1xuXG5cdFx0XHRzd2l0Y2ggKGJpbmRpbmcpIHtcblx0XHRcdFx0Y2FzZSAnc3R5bGUnOlxuXHRcdFx0XHRcdGlmIChwcm9wZXJ0eSkge1xuXHRcdFx0XHRcdFx0cmVuZGVyZXIuc2V0U3R5bGUoXG5cdFx0XHRcdFx0XHRcdGVsZW1lbnQsXG5cdFx0XHRcdFx0XHRcdHByb3BlcnR5LFxuXHRcdFx0XHRcdFx0XHRgJHt2YWx1ZX0ke3VuaXQgPz8gJyd9YCxcblx0XHRcdFx0XHRcdFx0cHJvcGVydHkuc3RhcnRzV2l0aCgnLS0nKVxuXHRcdFx0XHRcdFx0XHRcdD8gUmVuZGVyZXJTdHlsZUZsYWdzMi5EYXNoQ2FzZVxuXHRcdFx0XHRcdFx0XHRcdDogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHtcblx0XHRcdFx0XHRcdGZvciAoY29uc3QgW3N0eWxlLCB2YWxdIG9mIE9iamVjdC5lbnRyaWVzKHZhbHVlKSkge1xuXHRcdFx0XHRcdFx0XHRyZW5kZXJlci5zZXRTdHlsZShcblx0XHRcdFx0XHRcdFx0XHRlbGVtZW50LFxuXHRcdFx0XHRcdFx0XHRcdHN0eWxlLFxuXHRcdFx0XHRcdFx0XHRcdHZhbCxcblx0XHRcdFx0XHRcdFx0XHRzdHlsZS5zdGFydHNXaXRoKCctLScpXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IFJlbmRlcmVyU3R5bGVGbGFnczIuRGFzaENhc2Vcblx0XHRcdFx0XHRcdFx0XHRcdDogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnYXR0cic6XG5cdFx0XHRcdFx0aWYgKHZhbHVlID09IG51bGwpIHtcblx0XHRcdFx0XHRcdHJlbmRlcmVyLnJlbW92ZUF0dHJpYnV0ZShlbGVtZW50LCBwcm9wZXJ0eSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlbmRlcmVyLnNldEF0dHJpYnV0ZShlbGVtZW50LCBwcm9wZXJ0eSwgU3RyaW5nKHZhbHVlKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdjbGFzcyc6XG5cdFx0XHRcdFx0aWYgKCFwcm9wZXJ0eSkge1xuXHRcdFx0XHRcdFx0aWYgKHByZXZDbGFzc2VzLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRwcmV2Q2xhc3Nlcy5mb3JFYWNoKChrKSA9PiByZW5kZXJlci5yZW1vdmVDbGFzcyhlbGVtZW50LCBrKSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRwcmV2Q2xhc3NlcyA9XG5cdFx0XHRcdFx0XHRcdHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgPyB2YWx1ZS5zcGxpdCgnICcpLmZpbHRlcihCb29sZWFuKSA6IFtdO1xuXHRcdFx0XHRcdFx0cHJldkNsYXNzZXMuZm9yRWFjaCgoaykgPT4gcmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudCwgaykpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAodmFsdWUpIHtcblx0XHRcdFx0XHRcdFx0cmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudCwgcHJvcGVydHkpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmVuZGVyZXIucmVtb3ZlQ2xhc3MoZWxlbWVudCwgcHJvcGVydHkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRyZW5kZXJlci5zZXRQcm9wZXJ0eShlbGVtZW50LCBiaW5kaW5nLCB2YWx1ZSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xuXG5cdHJldHVybiBzaWduYWw7XG59XG4iXX0=
diff --git a/fesm2022/ngxtension-host-binding.mjs b/fesm2022/ngxtension-host-binding.mjs
index 9fe2fb00dc5d397b0bd686681c66320464578cf3..92204627f023ff7dc3c94bbe133eeec47b55726a 100644
--- a/fesm2022/ngxtension-host-binding.mjs
+++ b/fesm2022/ngxtension-host-binding.mjs
@@ -32,9 +32,18 @@ function hostBinding(hostPropertyName, signal, injector) {
             const [binding, property, unit] = hostPropertyName.split('.');
             switch (binding) {
                 case 'style':
-                    renderer.setStyle(element, property, `${value}${unit ?? ''}`, property.startsWith('--')
-                        ? RendererStyleFlags2.DashCase
-                        : undefined);
+                    if (property) {
+                        renderer.setStyle(element, property, `${value}${unit ?? ''}`, property.startsWith('--')
+                            ? RendererStyleFlags2.DashCase
+                            : undefined);
+                    }
+                    else if (typeof value === 'object' && value !== null) {
+                        for (const [style, val] of Object.entries(value)) {
+                            renderer.setStyle(element, style, val, style.startsWith('--')
+                                ? RendererStyleFlags2.DashCase
+                                : undefined);
+                        }
+                    }
                     break;
                 case 'attr':
                     if (value == null) {
diff --git a/fesm2022/ngxtension-host-binding.mjs.map b/fesm2022/ngxtension-host-binding.mjs.map
index 7dd75bba2de360ae0891a4a9b349350fb76d0d34..1bdddafc24a8c80660fd2f26469e985298bfe39d 100644
--- a/fesm2022/ngxtension-host-binding.mjs.map
+++ b/fesm2022/ngxtension-host-binding.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"ngxtension-host-binding.mjs","sources":["../../../../libs/ngxtension/host-binding/src/host-binding.ts","../../../../libs/ngxtension/host-binding/src/ngxtension-host-binding.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport {\n\teffect,\n\tElementRef,\n\tHostBinding,\n\tinject,\n\tInjector,\n\tRenderer2,\n\tRendererStyleFlags2,\n\trunInInjectionContext,\n\ttype Signal,\n\ttype WritableSignal,\n} from '@angular/core';\nimport { assertInjector } from 'ngxtension/assert-injector';\n\n/**\n * `hostBinding` takes a `hostPropertyName` to attach a data property, a class, a style or an attribute (as `@HostBinding` would) to the host.\n * The udpate is applied based on the update of the provided signal (writable or not).\n *\n * @param {Required<HostBinding>['hostPropertyName']} hostPropertyName - the same property that is bound to a data property, a class, a style or an attribute as `@HostBinding`.\n * @param {Signal | WritableSignal} signal - the signal on which to react to changes to update the host, and the one that will be returned as it is\n * @returns {Signal | WritableSignal}\n *\n * @example\n * ```ts\n * export class MyComponent {\n *  readonly background = hostBinding('style.background', signal('blue'));\n *\n *  constructor() {\n *    setTimeout(() => this.background.set('red'), 3000);\n *  }\n * }\n * ```\n */\nexport function hostBinding<T, S extends Signal<T> | WritableSignal<T>>(\n\thostPropertyName: Required<HostBinding>['hostPropertyName'],\n\tsignal: S,\n\tinjector?: Injector,\n): S {\n\tinjector = assertInjector(hostBinding, injector);\n\n\trunInInjectionContext(injector, () => {\n\t\tconst renderer = inject(Renderer2);\n\t\tconst element: HTMLElement = inject(ElementRef).nativeElement;\n\n\t\tlet prevClasses: string[] = [];\n\n\t\teffect(() => {\n\t\t\tconst value = signal();\n\t\t\tconst [binding, property, unit] = hostPropertyName.split('.');\n\n\t\t\tswitch (binding) {\n\t\t\t\tcase 'style':\n\t\t\t\t\trenderer.setStyle(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t`${value}${unit ?? ''}`,\n\t\t\t\t\t\tproperty.startsWith('--')\n\t\t\t\t\t\t\t? RendererStyleFlags2.DashCase\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attr':\n\t\t\t\t\tif (value == null) {\n\t\t\t\t\t\trenderer.removeAttribute(element, property);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trenderer.setAttribute(element, property, String(value));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'class':\n\t\t\t\t\tif (!property) {\n\t\t\t\t\t\tif (prevClasses.length) {\n\t\t\t\t\t\t\tprevClasses.forEach((k) => renderer.removeClass(element, k));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevClasses =\n\t\t\t\t\t\t\ttypeof value === 'string' ? value.split(' ').filter(Boolean) : [];\n\t\t\t\t\t\tprevClasses.forEach((k) => renderer.addClass(element, k));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\trenderer.addClass(element, property);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderer.removeClass(element, property);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\trenderer.setProperty(element, binding, value);\n\t\t\t}\n\t\t});\n\t});\n\n\treturn signal;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;AAAA;AAeA;;;;;;;;;;;;;;;;;;AAkBG;SACa,WAAW,CAC1B,gBAA2D,EAC3D,MAAS,EACT,QAAmB,EAAA;AAEnB,IAAA,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAEjD,IAAA,qBAAqB,CAAC,QAAQ,EAAE,MAAK;AACpC,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,OAAO,GAAgB,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;QAE9D,IAAI,WAAW,GAAa,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAK;AACX,YAAA,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC;AACvB,YAAA,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE9D,QAAQ,OAAO;AACd,gBAAA,KAAK,OAAO;oBACX,QAAQ,CAAC,QAAQ,CAChB,OAAO,EACP,QAAQ,EACR,GAAG,KAAK,CAAA,EAAG,IAAI,IAAI,EAAE,EAAE,EACvB,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;0BACtB,mBAAmB,CAAC,QAAQ;0BAC5B,SAAS,CACZ,CAAC;oBACF,MAAM;AACP,gBAAA,KAAK,MAAM;AACV,oBAAA,IAAI,KAAK,IAAI,IAAI,EAAE;AAClB,wBAAA,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;qBAC5C;yBAAM;AACN,wBAAA,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;qBACxD;oBACD,MAAM;AACP,gBAAA,KAAK,OAAO;oBACX,IAAI,CAAC,QAAQ,EAAE;AACd,wBAAA,IAAI,WAAW,CAAC,MAAM,EAAE;AACvB,4BAAA,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7D;wBACD,WAAW;4BACV,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AACnE,wBAAA,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC1D;yBAAM;wBACN,IAAI,KAAK,EAAE;AACV,4BAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;yBACrC;6BAAM;AACN,4BAAA,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;yBACxC;qBACD;oBACD,MAAM;AACP,gBAAA;oBACC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;aAC/C;AACF,SAAC,CAAC,CAAC;AACJ,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AACf;;AC5FA;;AAEG;;;;"}
\ No newline at end of file
+{"version":3,"file":"ngxtension-host-binding.mjs","sources":["../../../../libs/ngxtension/host-binding/src/host-binding.ts","../../../../libs/ngxtension/host-binding/src/ngxtension-host-binding.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport {\n\teffect,\n\tElementRef,\n\tHostBinding,\n\tinject,\n\tInjector,\n\tRenderer2,\n\tRendererStyleFlags2,\n\trunInInjectionContext,\n\ttype Signal,\n\ttype WritableSignal,\n} from '@angular/core';\nimport { assertInjector } from 'ngxtension/assert-injector';\n\n/**\n * `hostBinding` takes a `hostPropertyName` to attach a data property, a class, a style or an attribute (as `@HostBinding` would) to the host.\n * The udpate is applied based on the update of the provided signal (writable or not).\n *\n * @param {Required<HostBinding>['hostPropertyName']} hostPropertyName - the same property that is bound to a data property, a class, a style or an attribute as `@HostBinding`.\n * @param {Signal | WritableSignal} signal - the signal on which to react to changes to update the host, and the one that will be returned as it is\n * @returns {Signal | WritableSignal}\n *\n * @example\n * ```ts\n * export class MyComponent {\n *  readonly background = hostBinding('style.background', signal('blue'));\n *\n *  constructor() {\n *    setTimeout(() => this.background.set('red'), 3000);\n *  }\n * }\n * ```\n */\nexport function hostBinding<T, S extends Signal<T> | WritableSignal<T>>(\n\thostPropertyName: Required<HostBinding>['hostPropertyName'],\n\tsignal: S,\n\tinjector?: Injector,\n): S {\n\tinjector = assertInjector(hostBinding, injector);\n\n\trunInInjectionContext(injector, () => {\n\t\tconst renderer = inject(Renderer2);\n\t\tconst element: HTMLElement = inject(ElementRef).nativeElement;\n\n\t\tlet prevClasses: string[] = [];\n\n\t\teffect(() => {\n\t\t\tconst value = signal();\n\t\t\tconst [binding, property, unit] = hostPropertyName.split('.');\n\n\t\t\tswitch (binding) {\n\t\t\t\tcase 'style':\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\trenderer.setStyle(\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t`${value}${unit ?? ''}`,\n\t\t\t\t\t\t\tproperty.startsWith('--')\n\t\t\t\t\t\t\t\t? RendererStyleFlags2.DashCase\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\t\t\tfor (const [style, val] of Object.entries(value)) {\n\t\t\t\t\t\t\trenderer.setStyle(\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tstyle.startsWith('--')\n\t\t\t\t\t\t\t\t\t? RendererStyleFlags2.DashCase\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attr':\n\t\t\t\t\tif (value == null) {\n\t\t\t\t\t\trenderer.removeAttribute(element, property);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trenderer.setAttribute(element, property, String(value));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'class':\n\t\t\t\t\tif (!property) {\n\t\t\t\t\t\tif (prevClasses.length) {\n\t\t\t\t\t\t\tprevClasses.forEach((k) => renderer.removeClass(element, k));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevClasses =\n\t\t\t\t\t\t\ttypeof value === 'string' ? value.split(' ').filter(Boolean) : [];\n\t\t\t\t\t\tprevClasses.forEach((k) => renderer.addClass(element, k));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\trenderer.addClass(element, property);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderer.removeClass(element, property);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\trenderer.setProperty(element, binding, value);\n\t\t\t}\n\t\t});\n\t});\n\n\treturn signal;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;AAAA;AAeA;;;;;;;;;;;;;;;;;;AAkBG;SACa,WAAW,CAC1B,gBAA2D,EAC3D,MAAS,EACT,QAAmB,EAAA;AAEnB,IAAA,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAEjD,IAAA,qBAAqB,CAAC,QAAQ,EAAE,MAAK;AACpC,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,OAAO,GAAgB,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;QAE9D,IAAI,WAAW,GAAa,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAK;AACX,YAAA,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC;AACvB,YAAA,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE9D,QAAQ,OAAO;AACd,gBAAA,KAAK,OAAO;oBACX,IAAI,QAAQ,EAAE;wBACb,QAAQ,CAAC,QAAQ,CAChB,OAAO,EACP,QAAQ,EACR,GAAG,KAAK,CAAA,EAAG,IAAI,IAAI,EAAE,EAAE,EACvB,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;8BACtB,mBAAmB,CAAC,QAAQ;8BAC5B,SAAS,CACZ,CAAC;qBACF;yBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;AACvD,wBAAA,KAAK,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACjD,4BAAA,QAAQ,CAAC,QAAQ,CAChB,OAAO,EACP,KAAK,EACL,GAAG,EACH,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC;kCACnB,mBAAmB,CAAC,QAAQ;kCAC5B,SAAS,CACZ,CAAC;yBACF;qBACD;oBACD,MAAM;AACP,gBAAA,KAAK,MAAM;AACV,oBAAA,IAAI,KAAK,IAAI,IAAI,EAAE;AAClB,wBAAA,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;qBAC5C;yBAAM;AACN,wBAAA,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;qBACxD;oBACD,MAAM;AACP,gBAAA,KAAK,OAAO;oBACX,IAAI,CAAC,QAAQ,EAAE;AACd,wBAAA,IAAI,WAAW,CAAC,MAAM,EAAE;AACvB,4BAAA,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7D;wBACD,WAAW;4BACV,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AACnE,wBAAA,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC1D;yBAAM;wBACN,IAAI,KAAK,EAAE;AACV,4BAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;yBACrC;6BAAM;AACN,4BAAA,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;yBACxC;qBACD;oBACD,MAAM;AACP,gBAAA;oBACC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;aAC/C;AACF,SAAC,CAAC,CAAC;AACJ,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AACf;;ACzGA;;AAEG;;;;"}
